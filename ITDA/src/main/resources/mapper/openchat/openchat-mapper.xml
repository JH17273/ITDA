<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="openchat">


	<!-- 오픈 채팅방 목록 조회 -->
	<select id="selectOpenChatRoomList"
	resultType="com.kh.itda.openchat.model.vo.OpenChatRoom">
	SELECT
		OC.CHATROOM_ID AS chatRoomID,
		OC.OPEN_CHAT_ROOM_NAME AS chatName,
		COUNT(DISTINCT CP.USER_NUM) AS chatCount,
		OC.MAX_CHATROOM_COUNT AS maxchatCount,
		OC.EXPLANATION AS explanation,
		LISTAGG(DISTINCT t.TAG_CONTENT, ',') WITHIN GROUP (ORDER BY t.TAG_CONTENT) AS tagContent,

		F.FILE_ID AS fileId,
		F.FILE_NAME AS fileName

	FROM OPEN_CHAT OC
		LEFT JOIN CHAT_PARTICIPANT CP ON OC.CHATROOM_ID = CP.CHATROOM_ID
		LEFT JOIN OPENCHATROOM_TAG OT ON OC.CHATROOM_ID = OT.CHATROOM_ID
		LEFT JOIN TAG T ON ot.TAG_ID = T.TAG_ID

		LEFT JOIN "FILE" F 
			ON F.REF_NO = OC.CHATROOM_ID 
			AND F.CATEGORY_ID = 11
			AND F.FILE_ID = (
				SELECT MIN(FILE_ID)
				FROM "FILE"
				WHERE REF_NO = OC.CHATROOM_ID 
				AND CATEGORY_ID = 11
			)

	GROUP BY
		OC.CHATROOM_ID,
		OC.OPEN_CHAT_ROOM_NAME,
		OC.MAX_CHATROOM_COUNT,
		OC.EXPLANATION,
		F.FILE_ID,
		F.FILE_NAME

	ORDER BY OC.CHATROOM_ID
</select>



	<!-- CHAT_ROOM 테이블 INSERT -->
	<insert id="insertChatRoom"
		parameterType="com.kh.itda.openchat.model.vo.OpenChatRoom">
		<selectKey keyProperty="chatRoomID" resultType="int"
			order="BEFORE">
			SELECT CHAT_ROOM_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO CHAT_ROOM (
		CHATROOM_ID,
		USER_NUM,
		REF_NUM
		) VALUES (
		#{chatRoomID},
		#{userNum},
		5
		)
	</insert>

	<!-- OPEN_CHAT 테이블 INSERT -->
	<insert id="insertOpenChat"
		parameterType="com.kh.itda.openchat.model.vo.OpenChatRoom">
		INSERT INTO OPEN_CHAT (
		CHATROOM_ID,
		OPEN_CHAT_ROOM_NAME,
		OPEN_CHAT_COUNT,
		MAX_CHATROOM_COUNT,
		EXPLANATION,
		LOCATION_ID
		) VALUES (
		#{chatRoomID},
		#{chatName},
		0,
		#{maxchatCount},
		#{explanation},
		#{locationId}
		)
	</insert>


	<!-- FILE 테이블 INSERT -->
	<insert id="insertFile"
		parameterType="com.kh.itda.openchat.model.vo.OpenChatImg">
		<selectKey keyProperty="fileId" resultType="int"
			order="BEFORE">
			SELECT FILE_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO "FILE" (
		FILE_ID,
		CATEGORY_ID,
		FILE_NAME,
		REF_NO
		) VALUES (
		#{fileId},
		#{categoryId},
		#{fileName},
		#{refNo}
		)
	</insert>

	<!-- TAG 존재 여부 확인 -->
	<select id="selectTagIdByContent" parameterType="string"
		resultType="int">
		SELECT TAG_ID
		FROM TAG
		WHERE TAG_CONTENT = #{tagContent}
	</select>

	<!-- TAG 새로 삽입 -->
	<insert id="insertTag" parameterType="map">
		<selectKey keyProperty="tagId" resultType="int"
			order="BEFORE">
			SELECT TAG_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		MERGE INTO TAG t
		USING (
		SELECT #{tagContent} AS TAG_CONTENT, #{tagId}
		AS TAG_ID FROM dual
		) src
		ON (t.TAG_CONTENT = src.TAG_CONTENT)
		WHEN NOT
		MATCHED THEN
		INSERT (TAG_ID, TAG_CONTENT)
		VALUES (src.TAG_ID,
		src.TAG_CONTENT)
	</insert>


	<!-- OPENCHATROOM_TAG 연결 삽입 -->
	<insert id="insertOpenChatRoomTag" parameterType="map">
		INSERT INTO
		OPENCHATROOM_TAG (
		CHATROOM_ID,
		TAG_ID
		) VALUES (
		#{chatRoomID},
		#{tagId}
		)
	</insert>
	
	<!-- 채팅방 생성시 채팅방 생성자 자동 입장 -->
	<insert id="insertParticipant" parameterType="map">
    MERGE INTO CHAT_PARTICIPANT cp
    USING (SELECT #{chatRoomID} CHATROOM_ID,
                  #{userNum}    USER_NUM
           FROM dual) src
    ON (cp.CHATROOM_ID = src.CHATROOM_ID
        AND cp.USER_NUM = src.USER_NUM)
    WHEN NOT MATCHED THEN
      INSERT (CHATROOM_ID, USER_NUM)
      VALUES (src.CHATROOM_ID, src.USER_NUM)
</insert>

<update id="updateOpenChatCount" parameterType="int">
    UPDATE OPEN_CHAT
    SET OPEN_CHAT_COUNT = (
        SELECT COUNT(*)
        FROM CHAT_PARTICIPANT 
        WHERE CHATROOM_ID = #{chatRoomID}
    )
    WHERE CHATROOM_ID = #{chatRoomID}
</update>

<select id="selectChatRoombyId" parameterType="int"
        resultType="com.kh.itda.openchat.model.vo.OpenChatRoom">
	SELECT CHATROOM_ID,
	       OPEN_CHAT_ROOM_NAME AS chatName,
	       EXPLANATION,
	       MAX_CHATROOM_COUNT AS maxchatCount,
	       OPEN_CHAT_COUNT AS chatCount
	FROM OPEN_CHAT
	WHERE CHATROOM_ID = #{chatRoomId}
</select>

<select id="selectChatRoomsByUser" parameterType="int" resultType="com.kh.itda.openchat.model.vo.OpenChatRoom">
    SELECT oc.CHATROOM_ID,
           oc.OPEN_CHAT_ROOM_NAME AS chatName,
           oc.EXPLANATION AS explanation,
           oc.MAX_CHATROOM_COUNT AS maxchatCount,
           oc.OPEN_CHAT_COUNT AS chatCount
    FROM OPEN_CHAT oc
    JOIN CHAT_PARTICIPANT cp ON oc.CHATROOM_ID = cp.CHATROOM_ID
    WHERE cp.USER_NUM = #{userNum}
</select>

<select id="existsOpenChatRoomTag" parameterType="map" resultType="int">
    SELECT COUNT(*)
    FROM OPENCHATROOM_TAG
    WHERE CHATROOM_ID = #{chatRoomID}
      AND TAG_ID = #{tagId}
</select>

</mapper>