<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="security">

	<select id="loadUserByUsername" resultMap="userResultMap">
		SELECT U.*,
		P.IMAGE_URL
		FROM USER_TB U
		LEFT JOIN PROFILE P
		ON U.USER_NUM = P.USER_NUM
		WHERE
		USER_ID = #{userId}
	</select>

	<select id="searchUsers" parameterType="String"
		resultType="com.kh.itda.user.model.vo.User">
		SELECT
		U.USER_NUM as userNum,
		U.USER_ID as userId,
		U.USER_PWD
		as userPwd,
		U.NICK_NAME as nickName,
		U.EMAIL as email,
		U.CREATE_DATE as
		createDate
		FROM USER_TB U
		WHERE U.NICK_NAME LIKE #{keyword}
		ORDER BY
		U.USER_NUM
	</select>

	<select id="getAllReports"
		resultType="com.kh.itda.support.model.vo.Report">
		SELECT
		REPORT_NUM AS reportNum,
		USER_NUM AS userNum,
		TYPE AS
		type,
		TARGET_ID AS targetId,
		REASON AS reason,
		DETAIL_REASON AS
		detailReason,
		STATUS AS status,
		CREATED_AT AS createdAt,
		PROCESSED_AT AS
		processedAt
		FROM REPORTS
		ORDER BY REPORT_NUM DESC
	</select>


	<!-- 권한 조회 -->
	<select id="findAuthoritiesByUserNum" parameterType="int"
		resultMap="authoritesMap">
		SELECT AUTHORITY
		FROM AUTHORITIES
		WHERE USER_NUM = #{userNum}
	</select>

	<!-- 회원 정보 조회(프로필 제외) -->
	<select id="findUserById" parameterType="string"
		resultType="User">
		SELECT * FROM USER_TB  WHERE USER_ID = #{userId}
	</select>

	<!-- 아이디 중복 체크 -->
	<select id="idCheck" resultType="int" parameterType="String">
		SELECT
		COUNT(*) FROM USER_TB WHERE USER_ID = #{userId}
	</select>
	
	<!-- 닉네임 중복 체크 -->
	<select id="checkNickname" resultType="int" parameterType="String">
		SELECT
		COUNT(*) FROM USER_TB WHERE NICK_NAME = #{nickName}
	</select>
	
	<!-- 폰번호 중복 체크 -->
	<select id="checkPhone" resultType="int" parameterType="String">
		SELECT
		COUNT(*) FROM USER_TB WHERE PHONE = #{phone}
	</select>
	
	<insert id="insertToken">
		INSERT
		INTO PERSISTENT_LOGINS(SERIES, USERNAME, TOKEN,
		LAST_USED)
		VALUES (#{series}, #{username}, #{token}, #{lastUsed})
	</insert>

	<update id="updateToken">
		UPDATE PERSISTENT_LOGINS
		SET TOKEN = #{token},
		LAST_USED = #{lastUsed}
		WHERE SERIES = #{series}
	</update>

	<select id="selectToken"
		resultType="org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken">
		SELECT
		SERIES,
		USERNAME,
		TOKEN,
		LAST_USED
		FROM PERSISTENT_LOGINS
		WHERE SERIES = #{series}
	</select>

	<delete id="deleteTokensByUserNum" parameterType="map">
		DELETE FROM
		PERSISTENT_LOGINS WHERE USERNAME = #{username}
	</delete>

	<resultMap type="userExt" id="userResultMap">
		<id column="USER_NUM" property="userNum" />
		<result column="USER_ID" property="userId" />
		<result column="USER_PWD" property="userPwd" />
		<result column="NICK_NAME" property="nickName" />
		<result column="EMAIL" property="email" />
		<result column="PHONE" property="phone" />
		<result column="BIRTH" property="birth" />
		<result column="ADDRESS" property="address" />
		<result column="CREATE_DATE" property="createDate" />
		<result column="IMAGE_URL" property="imageUrl" />
		<collection property="authorities" javaType="arraylist"
			ofType="org.springframework.security.core.authority.SimpleGrantedAuthority"

			column="USER_NUM" select="findAuthoritiesByUserNum" />
	</resultMap>

	<resultMap type="org.springframework.security.core.authority.SimpleGrantedAuthority" id="authoritesMap">
		<constructor >
			<arg column="AUTHORITY" javaType="string" />
		</constructor>
	</resultMap>

</mapper>
